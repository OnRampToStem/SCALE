<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="img/favicon.ico">
	<title>S C A L E &nbsp;Ontology Editor</title>
	<meta name="viewport" content="width=device-width, initial-scale=.66, shrink-to-fit=no">
	<script src="https://apis.google.com/js/api.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
	<link   rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
 	<style>
		 body { 			font-family: Verdana,Geneva,sans-serif; font-size:14px; padding:0; margin:12px; 
		 					box-sizing: border-box; background-color: #f8f8f8;	
							}
		.wm-splash { 		width:100%; text-align:center; margin-top:10%; display:none;
							}
		.wm-confirm {		position: absolute;  width: 350px; padding: 16px; left: calc(50% - 150px); top: calc(50% - 50px); user-select: none;	
							border-radius: 8px; background-color: #fff; border: 1px solid #999; box-shadow: 4px 2px 12px 2px #aaa; 
							}
		.wm-main { 			width:100%; height:100%; overflow:auto; display:none; 
							}
		.wm-prop { 			display:inline-block; width:calc(33vw - 24px); height:calc(100vh - 32px); overflow:auto; background-color:#fff; 
							border:2px solid #999; vertical-align:top; margin-right:6px; text-align:center;
							}
		.wm-is {			border-radius:10px; padding-left:8px; padding-right:8px; padding-top:1px;
							border:1px solid #999; font-size:12px; height:20px; width:300px;
							}
		.wm-is2 {			border-radius:10px; padding-left:8px; padding-right:8px; padding-top:1px;
							border:1px solid #999; font-size:12px; height:18px; width:120px;
							}
		.wm-bs {			border-radius: 16px; padding-left: 8px; padding-right: 8px; display: inline-block; height: 17px; padding-top: 1px;
							font-size: 12px; background-color: #27ae5f; cursor: pointer; text-align: center; color:#fff; user-select: none;
							}
	
</style>

</head>
<body>
	<div id='mainDiv' class='wm-main'></div>
	<div id='splashDiv' class='wm-splash'>
		<img src='img/scaleLogo.png'><br><br>
		<h1 style='font-size:18pt;font-family:trebuchet ms,sans-serif'>S C A L E</h1>Student-Centered Adaptive Learning Environment
		<p style='color:#999;font-weight:bold;font-size:48px'><b>Ontology editor</b></p>
	</div>
<script>

	$(document).ready(function() {													// WHEN PAGE LOADED
		DrawMenu();																		// Draw menu
		if (window.location.host != "localhost")  {										// Not in debug 
			$("#splashDiv").fadeIn().delay(2000).fadeOut();								// Fade out splash
			$("#mainDiv").delay(2000).fadeIn(2000);										// Wait, and fade in main
			}	
		else $("#mainDiv").fadeIn(0);													// Load fast
		var url=window.location.search.substring(1);						   			// Get query string
		if (!url)																		// No lobs id set
			url="1LSnAM3A62AQipZfqxDtlOjt4MWJ0fBP22cdyqJqEj5M";							// Use this one

		if (window.addEventListener) 													// If supported this way
			window.addEventListener("message",html5MessageHandler,false);				// Add event handler
		else window.attachEvent("message",html5MessageHandler);							// Add handler
		
		$(window).on("keydown",function(e) {											// HANDLE KEYPRESS
			if ((e.which == 84) && e.altKey && e.ctrlKey) {								// Test key (Ctrl+Alt+T)
				}
			});
		});

	function html5MessageHandler(e)													// ON HTML5 EVENT
	{
		let v=e.data.split("|");
		if (v[0] == "ShivaGraph=click") DrawProperties(v[2]);
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DRAW
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	let curNode=""

	function DrawMenu()
	{
		let w=$("body").width();
		let h=$(window).height();
		let str=`<div class="wm-prop">
			<br><img src='img/scaleLogo.png' width='64'><br>
			S C A L E<br>Ontology Editor<br>
			<div id="propDiv">gfftf</div></div> 
			<div style="display:inline-block;vertical-align:top;border:2px solid #999">
			<iframe id="ifr" style="width:${w*.666}px;height:calc(100vh - 32px);border:none;"
			src='http://www.viseyes.org/shiva/go.htm?shivaGroup=Graph&chartType=Tree&
			dataSourceUrl=https://docs.google.com/spreadsheet/pub?key=0AohdE1_3ZElJdERqTXJTbnJGUzdMamtzVUV1d0NFalE%5Eoutput=html&height=${h-32}px
			&width=${w*.666}px&backCol=ffffff&trans=1000&spacing=180&depth=3&nCol=b0c4de&eWid=1.5&eCol=dddddd&lSize=16&lCol=000000&ud=false'></iframe>
			</div>`;
		$("#mainDiv").html(str);
	}

	function DrawProperties(id)
	{
		curNode=id;
		let str=`<h2>${id}</h2>`
		$("#propDiv").html(str);
	}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GOOGLE DRIVE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var gdClientId="453812393680-8tb3isinl1bap0vqamv45cc5d9c7ohai.apps.googleusercontent.com";		// Google client id
var gdScope="https://www.googleapis.com/auth/drive";											// Scope of access
var gdKey="AIzaSyD0jrIlONfTgL-qkfnMTNdjizsNbLBBjTk";											// Google API key

function SaveSpreadsheet(id, data)															// CLEAR AND SAVE DATA TO GDRIVE
{
		gapi.load('client:auth2', function() {
			gapi.client.init({																	// Init
			apiKey: gdKey, clientId: gdClientId, scope:gdScope,									// Params
           	discoveryDocs:["https://sheets.googleapis.com/$discovery/rest?version=v4"],			// API discovery
        	}).then(function () {																// When initted, listen for sign-in state changes.
	        	gapi.auth2.getAuthInstance().isSignedIn.listen(doIt);							// Try						
        		doIt(gapi.auth2.getAuthInstance().isSignedIn.get());							// Try
	
				function doIt(isSignedIn) {														// Do action
					if (!isSignedIn) 															// If not signed in yet														
						gapi.auth2.getAuthInstance().signIn();									// Sign in
					else{																		// Clear and save
						var params= { spreadsheetId:id, range: "A1:ZZZ100000" };				// Where to save it
						var body= { majorDimension: "ROWS", values: data };						// Data to save
						var request=gapi.client.sheets.spreadsheets.values.clear(params);		// Clear first
						request.then(function(r) { 												// When cleared
							params.valueInputOption="RAW";										// Send raw data
							var request=gapi.client.sheets.spreadsheets.values.update(params,body);	// Send new data
							request.then(function(r) {											// Good save
								Sound("ding");													// Ding
								PopUp("Course copied<br>to Google Drive!");						// Show popup
								}, 
								function(e) { trace(e.result.error.message); })					// Error reporting for send
							}, 
						function(e) { trace(e.result.error.message); });						// Error reporting for clear
						}
				}			
			});
		});
}

function GetSpreadsheet(allFiles, callback)													// RUN GDRIVE PICKER
{
	var oauthToken,pickerApiLoaded=false;
	gapi.load('auth', { callback: function() {													// LOAD AUTH
		window.gapi.auth.authorize({															// Authorize
				apiKey: gdKey, client_id: gdClientId, scope:gdScope,immediate: false },			// Params
				function(authResult) {															// On auth return
					if (authResult && !authResult.error) {										// If OK
						oauthToken=authResult.access_token;										// Set token
						createPicker();															// Create picker
						}
				});																				// End auth.authorize()
			}																					// End callback()
		});																						// End auth()
		
	gapi.load('picker', {'callback': function() {												// LOAD PICKER							
			pickerApiLoaded=true;																// Set flag
			createPicker();																		// Create picker
			}
		});
	
	function createPicker() {																	// CREATE GDRIVE PICKER
		if (pickerApiLoaded && oauthToken) {													// If loaded and authed
			var view=new google.picker.DocsView(google.picker.ViewId.SPREADSHEETS).				// Make view
			setOwnedByMe(allFiles).setIncludeFolders(true);										// Params
			var picker=new google.picker.PickerBuilder().										// Make picker
				addView(view).setOAuthToken(oauthToken).										// Params
				setDeveloperKey(gdKey).setCallback(pickerCallback).build();						// Do it
			picker.setVisible(true);															// Show picker
			}
		}

	function pickerCallback(data) {																// FILE CHOSEN CALLBACK
		if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {				// If picked
			var doc=data[google.picker.Response.DOCUMENTS][0];									// Get doc
			callback(doc.id,doc.name);															// Return name and id
			}
		}
}																								// End closure


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HELPERS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	function ConfirmBox(title, content, callback, callback2)							// CONFIRMATION BOX
	{
		Sound("ding");																		// Ding sound
		$("#confirmBoxDiv").remove();														// Remove 
		$("body").append("<div class='wm-confirm' id='confirmBoxDiv'></div>");														
		var str="<img src='img/scaleLogo.png' width='32' style='vertical-align:-10px'/>&nbsp;&nbsp;";								
		str+="<span style='font-size:18px; color:#666'><b>"+title+"</b></span><br>";
		str+="<p>"+content+"<p>";
		str+="<div style='float:right'><div id='confirmOK' class='wm-bs'>OK</div>";
		str+="<div id='confirmCancel' class='wm-bs' style='margin-left:8px;background-color:#999'>Cancel</div></div>";
		$("#confirmBoxDiv").html(str);	
	
		$("#confirmOK").on("click", function() {											// ON OK BUT
				$("#confirmBoxDiv").remove();												// Remove 
				if (callback)	callback();													// If callback defined, run it
				});

		$("#confirmCancel").on("click", function() {										// ON CANCEL BUT
				$("#confirmBoxDiv").remove();												// Remove 
				if (callback2)	callback2();												// If callback defined, run it
				Sound("delete");															// Delete sound
				});
	}

	function Sound(sound, mute)												// PLAY SOUND
	{
		var snd=new Audio();													// Init audio object
		if (sound.match(/\.mp3/i))		snd=new Audio(sound)					// If an MP3 file
		else							snd=new Audio("img/"+sound+".mp3");		// Use built in mp3
		if (!mute)	{															// If not initing or muting	
			snd.volume=50/100;													// Set volume
			snd.play();															// Play it
			}
		}
	
	function PopUp(msg, time, div)											// TIMED POPUP
	{
		var str="";
		$("#popupDiv").remove();												// Kill old one, if any
		str+="<div id='popupDiv' class='wm-popup'>"; 							// Add div
		if (time == -1) {														// If has close but
			time=100000;														// Increase time
			str+="<img id='pu-close' src='img/closedot.gif' style='float:right;cursor:pointer'>";	// Add close button
			}
		str+=msg+"</div>"; 														// Add div
		$(div ? "#"+div : "body").append(str);									// Add popup to div or body
		$("#pu-close").click(function() { $("#popupDiv").remove(); });			// Remove on click of close but
		$("#popupDiv").fadeIn(500).delay(time ? time : 2000).fadeOut(500)		// Animate in and out		
	}

	function trace(msg, p1, p2, p3, p4)										// CONSOLE 
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
	}

</script></body></html>